<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 开启Spring的Annotation注解处理器 -->
    <context:annotation-config/>
    <!-- 开启Spring的Bean自动扫描机制来查找与管理Bean实例 -->
    <context:component-scan base-package="cn"/>
    <!-- data connection -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!--基本信息-->
        <property name="driverClass" value="${c3p0.driverClass}"/>
        <property name="jdbcUrl" value="${c3p0.jdbcUrl}"/>
        <property name="user" value="${c3p0.user}"/>
        <property name="password" value="${c3p0.password}"/>
        <!--其他配置-->
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
        <!--连接池中保留的最小连接数。Default: 3 -->
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <!--连接池中保留的最大连接数。Default: 15-->
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
        <property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}"/>
        <property name="testConnectionOnCheckin" value="${c3p0.testConnectionOnCheckin}"/>
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
        <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>
        <!--控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
        <property name="maxStatements" value="${c3p0.maxStatements}"/>
        <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
        <property name="maxStatementsPerConnection" value="${c3p0.maxStatementsPerConnection}"/>
        <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
    </bean>

    <!-- session factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--dataSource属性指定要用到的数据源，因此在Hibernate的
        核心配置文件中就无需再配置与数据库连接相关的属性-->
        <property name="dataSource" ref="dataSource"/>
        <!--指定Hibernate核心配置文件-->
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 开启事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!--&lt;!&ndash; 配置hibernateTemplate &ndash;&gt;-->
    <!--<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">-->
        <!--<property name="sessionFactory" ref="sessionFactory"></property>-->
    <!--</bean>-->
    <!--&lt;!&ndash;注解&ndash;&gt;-->
    <!--<bean id="redrawAction" class="cn.wmap.action.RedrawAction" scope="prototype">-->
        <!--<property name="polygonService" ref="polygonService"></property>-->
    <!--</bean>-->
    <!--<bean id="saveAction" class="cn.wmap.action.SaveAction" scope="prototype">-->
        <!--<property name="polygonService" ref="polygonService"></property>-->
    <!--</bean>-->
    <!--<bean id="polygonService" class="cn.wmap.service.PolygonService">-->
        <!--<property name="polygonDao" ref="polygonDao"></property>-->
    <!--</bean>-->
    <!--<bean id="polygonDao" class="cn.wmap.dao.PolygonDao">-->
        <!--<property name="hibernateTemplate" ref="hibernateTemplate"></property>-->
    <!--</bean>-->
</beans>
